"""
Django settings for settings project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ck-bx63*r4a4ytbc)e%%^*^0qqz9z!-5))+w3t2zhf%b5l3!li'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django.contrib.gis",
    "leaflet",
    'graphene_gis',
    'django_crontab',
    "graphene_django",
    
    "coreApp",
    "produitApp",
    "officineApp",
    "UserApp",
    "mainApp",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    
    'coreApp.middleware.LockoutMiddleware',
    'coreApp.middleware.AccessCheckMiddleware',
    'coreApp.middleware.InjectMyAppDataMiddleware',
    'coreApp.middleware.ChangeLanguage',
]

ROOT_URLCONF = 'settings.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'settings.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.contrib.gis.db.backends.spatialite',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # },
    
    'default': {
        'ENGINE'    : 'django.contrib.gis.db.backends.mysql',
        'HOST'      : os.getenv("DB_HOST", "0.0.0.0"),
        'PORT'      : os.getenv("DB_PORT", 3306),
        'USER'      : os.getenv("DB_USER", "root"),
        'PASSWORD'  : os.getenv("DB_PASSWORD", "12345678"),
        'NAME'      : os.getenv("DB_NAME", "ipi"),
    },
    
    # 'default': {
    #     'ENGINE'    : 'django.contrib.gis.db.backends.mysql',
    #     'HOST'      : os.getenv("DB_HOST", "aristidemanyesse.mysql.pythonanywhere-services.com"),
    #     'PORT'      : os.getenv("DB_PORT", 3306),
    #     'USER'      : os.getenv("DB_USER", "aristidemanyesse"),
    #     'PASSWORD'  : os.getenv("DB_PASSWORD", "MerciSeigneur21"),
    #     'NAME'      : os.getenv("DB_NAME", "aristidemanyesse$feza"),
    # },
}

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CORS_ALLOW_ALL_ORIGINS = True


LOGIN_URL = "/auth/login/"

SESSION_ENGINE = 'django.contrib.sessions.backends.db'   # Engine (default)
SESSION_COOKIE_NAME = "sessionid"                       #  Session's cookie is saved on the browser, namely: sessionId = random string (default)
SESSION_COOKIE_PATH = "/"                               #  Session's cookie saved path (default)
SESSION_COOKIE_DOMAIN = None                             #  Session's cookie saved domain (default)
SESSION_COOKIE_SECURE = False                            #  Whether HTTPS is transferred for cookies (default)
SESSION_COOKIE_HTTPONLY = True                           #  Whether the session's cookie only supports HTTP transmission (default)
SESSION_COOKIE_AGE = 1209600                             #  Session's cookie failure date (2 weeks) (default)
SESSION_EXPIRE_AT_BROWSER_CLOSE = False                  #  Whether to close your browser makes the session expire (default)
SESSION_SAVE_EVERY_REQUEST = True  


LEAFLET_CONFIG = {
    'DEFAULT_CENTER': (5.352731, -3.907053),
    'DEFAULT_ZOOM': 12,
    'MIN_ZOOM': 3,
    'MAX_ZOOM': 22,
    'DEFAULT_PRECISION': 6,
    'ATTRIBUTION_PREFIX': 'IPI Â¶ Ici, les Pharmacies Ivoiriennes',
    'MINIMAP': True,
}

GRAPHENE = {
    'SCHEMA_INDENT': 4,
    "SCHEMA": "settings.schemas.schema",
    'MIDDLEWARE': [
        'graphene_django_extras.ExtraGraphQLDirectiveMiddleware'
    ]
}

CRON_LOG_DIR = os.path.join(BASE_DIR, "logs", "garde1.log")
CRONJOBS = [
    # ('0 10 * * 5', 'officineApp.cron.create_garde', f'>> {os.path.join(BASE_DIR, "/logs/garde.log")}'),
    ('*/1 * * * *', 'officineApp.cron.create_garde', f'>> {CRON_LOG_DIR}'),
]